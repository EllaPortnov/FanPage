@model IEnumerable<InternetFanPage.Models.Concert>

@{
    ViewBag.Title = "Concerts";
}

<h2>Upconig Concerts</h2>
<link rel="stylesheet" href="~/css/concerts.css" />

<div class="row">
    <div class="col-sm-3">
        <ul class="list-group">
            <li type="button" class="list-group-item concert-list-title">
                City Name
            </li>
            @foreach (var item in Model)
            {
                <li type="button" class="list-group-item concert-list-item" id="@item.ConcertID">
                    @item.City
                </li>
            }
        </ul>

        <ul class="list-group" id="concert-details" style="display:none;">
            <li type="button" class="list-group-item current-concert" id="cb">
                <div class="cb-card-title">
                    <svg id="cb-x-card" class="cb-x-card">
                        <path fill="none" d="M0 0h24v24H0V0z" />
                        <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z" />
                    </svg>
                    <h4 id="cbCity"></h4>
                </div>
                <div id="cbAddress"></div>
                <div id="cbDate"></div>
                <div id="cbPrice"></div>



            </li>
        </ul>
    </div>
    <div class="col-sm-9">
        <div id='printoutPanel'></div>
        <div id='myMap' style='position:relative;width:100%;height:500px;'></div>
    </div>
</div>

<script src="~/Scripts/jquery-3.3.1.min.js"></script>

<script type='text/javascript'>
    function weather(lat, lon) {
        var api_url = 'http://api.openweathermap.org/data/2.5/weather?lat=' +
            lat + '&lon=' +
            lon + '&units=metric&appid=42f325f217132a2fa4b282b44d4a873e';

        $.ajax({
            url: api_url,
            method: 'GET',
            success: function (data) {

                var tempr = data.main.temp;
                var icon = data.weather[0].icon;

                $('#cbForcast').text(tempr + '°');
                $('#cbForcast').append('<img src=http://openweathermap.org/img/w/' + icon + '.png>');
            }
        });
    }

    // When the user select concert:
    // 1. zooms in
    // 2. show the card with the current concert details
    // 3. mark the currect concert list item
    function concertSelected(args, concertListItem) {
        var pushpin;
        if (concertListItem === undefined) {
            pushpin = args.target;
            concertListItem = $("#" + pushpin.metadata.concertID);
        } else {
            pushpin = map.entities.get(concertListItem[0].id-2);
        }

        $("li.concert-list-item").css('background-color', 'white');
        $(concertListItem).css('background-color', '#f2f2f2');
        $("#concert-details").css('display', 'inherit');

        map.setView({ center: pushpin.getLocation(), zoom: 15 });
        $("#cbCity").text(pushpin.metadata.City);
        $("#cbAddress").text(pushpin.metadata.Address);
        $("#cbDate").text(pushpin.metadata.Date);
        $("#cbPrice").text("Price:" +   pushpin.metadata.Price + " NIS");

        weather(pushpin.getLocation().latitude, pushpin.getLocation().longitude);
    }


   
    // When the user closes the card the map zooms out
    // unmark the currect concert list item
    function infoboxClosed() {
        if (!infobox.getVisible()) {
            $("li.concert-list-item").css('background-color', 'white');
            map.setView({
                center: new Microsoft.Maps.Location(31.96482358762261, 34.99964556250001),
                zoom: 8
            });
        }
    }

    function loadMapScenario() {
        map = new Microsoft.Maps.Map(document.getElementById('myMap'), {
            // Map settings when loading. Map center set to Sgula, Israel.
            credentials: 'Aoe9qNuzrXqzV9N97QUrO_TDmXB1mKLe9cSAsj6MhBvWV5GfJwFnmzs1KxxbG-BG',
            center: new Microsoft.Maps.Location(31.96482358762261, 34.99964556250001),
            zoom: 8
        });

        // Push pin for every concert
        // Get the concerts list from the srver side and convert to JSON array
        var location;
        var pushpin;


        var concerts = @Html.Raw(Json.Encode(Model));


        for (var i = 0; i < concerts.length; i++) {
            location = new Microsoft.Maps.Location(concerts[i].Latitude, concerts[i].Longitude);
            pushpin = new Microsoft.Maps.Pushpin(location,5);
            pushpin.metadata = concerts[i];
            map.entities.push(pushpin);
            Microsoft.Maps.Events.addHandler(pushpin, 'click', (args) => { concertSelected(args); });
        }
    }

    // Handel list iten click
    $(".concert-list-item").click(function () {
        concertSelected(null, $(this));
    });


    $("#cb-x-card").click(function () {
        $("#concert-details").css('disp lay', 'none');
        $("li.concert-list-item").css('background-color', 'white');
        map.setView({
            center: new Microsoft.Maps.Location(31.96482358762261, 34.99964556250001),
            zoom: 8
        });
    });

</script>
<script type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?callback=loadMapScenario' async defer></script>
