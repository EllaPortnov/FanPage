@model InternetFanPage.Models.ProductsPageModel

@{
    ViewData["Title"] = "Shop";
}

<div class="page-wrapper chiller-theme toggled">
    <a id="show-sidebar" class="btn btn-sm btn-dark" href="#">
        <i class="fas fa-bars"></i>
    </a>
    <aside id="sidebar" class="sidebar-wrapper">
        <div class="sidebar-content">
            <div class="sidebar-brand">
                <a href="#">Categories</a>
                <div id="close-sidebar">
                    <i class="fas fa-times"></i>
                </div>
            </div>
            <div class="sidebar-menu">
                <ul>
                    <li>
                        <a href="/Home/Products">
                            <span>All</span>
                        </a>

                    </li>
                    @foreach (var category in Model.Categories)
                    {
                        <li>
                            <a href="/Home/Products?categoryId=@category.CategoryID">
                                <span>@category.Name.ToString() (@category.Count)</span>
                            </a>

                        </li>
                    }
                </ul>
            </div>
            <!-- sidebar-menu  -->
        </div>
    </aside>
    <!-- sidebar-wrapper  -->
    <main class="page-content">
        <section class="container-fluid">
            <form asp-controller="Home" asp-action="Products" class="form-inline search-form">
                <div class="form-group">
                    <input class="form-control" type="text" name="SearchTerm" placeholder="Search" aria-label="Search" style="width:250px">
                    <input type="submit" class="btn btn-default" value="Filter" />
                </div>
            </form>
            @if (Session["User"] != null)
            {
                <h3>Recommended for you:</h3><br />
                <div id="recommendedProducts">
                    @foreach (var rec in Model.Recommended)
                    {
                        <div class="card" product-id="@rec.ProductID">
                            <img class="card-img-top" src="~/assets/@rec.Image" alt="@rec.Name" style='display:block; width:150px;height:150px;'>
                            <div class="card-body">
                                <h5 class="card-title">@rec.Name</h5>
                                <p class="card-text">@rec.Description</p>
                                <a href="#" class="btn btn-primary view-product-btn">Details</a>

                            </div>
                        </div>
                    }
                </div>
            }

            <div id="products">
                @foreach (var product in Model.Products)
                {
                    if ((Model.Recommended != null &&
                        Model.Recommended.Where(p => p.ProductID == product.ProductID).Count() == 0) ||
                        Model.Recommended == null)
                    {
                        <!-- <div class="col-sm-4"> -->
                        <div class="card" product-id="@product.ProductID">
                            <img class="card-img-top" src="~/assets/@product.Image" alt="@product.Name" style='display:block; width:150px;height:150px;'>
                            <div class="card-body">
                                <h5 class="card-title">@product.Name</h5>
                                <p class="card-text">@product.Description</p>
                                <a href="#" class="btn btn-primary view-product-btn">Details</a>

                            </div>
                        </div>
                    }
                    <!-- </div> -->
                }
            </div>
            <!-- Modal -->
            <div class="modal fade" id="productModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-body">
                            <div class="container-fluid">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                                <div class="row">
                                    <div class="col-md-5">
                                        <input type="file" id="imageFile" style="display:none">
                                    </div>
                                    <div class="col-md-7">
                                        <div class="product-detail-row">
                                            <div class="col-md-6 row-title">Name:</div>
                                            <div id="product-name" class="product-info">?</div>
                                        </div>
                                        <div class="product-detail-row">
                                            <div class="col-md-6 row-title">Price:</div>
                                            <div id="product-price" class="product-info">?</div>
                                        </div>
                                        <div class="product-detail-row">
                                            <div class="col-md-6 row-title">Category:</div>
                                            <div id="product-category" class="product-info">?</div>
                                        </div>
                                        <div class="product-detail-row">
                                            <div class="col-md-6 row-title">Description:</div>
                                            <div id="product-description" class="product-info">?</div>
                                        </div>
                                        <div class="product-detail-row">
                                            <div class="col-md-6 row-title">In Stock:</div>
                                            <div id="product-in-stock" class="product-info">?</div>
                                        </div>
                                        @if (@Session["User"] != null)
                                        {
                                            <a href="#" style="visibility:visible" id="buy-product-btn" class="btn btn-primary buy-product-btn">Buy</a>
                                        }
                                        @if (Session["IsAdmin"] != null && (bool)Session["IsAdmin"])
                                        {
                                            <button type="button" class="btn btn-default btn-sm" id="editBtn">
                                                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Edit
                                            </button>
                                            <button type="button" class="btn btn-success btn-sm" id="saveBtn" style="display:none">
                                                <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> Save
                                            </button>
                                            <button type="button" class="btn btn-danger btn-sm" id="deleteBtn">
                                                <span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Delete
                                            </button>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <input type="hidden" id="session" data-value="@Session["UserID"]"/>
    </main>
    <!-- page-content" -->
</div>
<link rel="stylesheet" href="~/css/sidebar.css" />

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>

<!-- page-wrapper -->
<script>
    jQuery(function ($) {

        $(".sidebar-dropdown > a").click(function () {
            $(".sidebar-submenu").slideUp(200);
            if (
                $(this)
                    .parent()
                    .hasClass("active")
            ) {
                $(".sidebar-dropdown").removeClass("active");
                $(this)
                    .parent()
                    .removeClass("active");
            } else {
                $(".sidebar-dropdown").removeClass("active");
                $(this)
                    .next(".sidebar-submenu")
                    .slideDown(200);
                $(this)
                    .parent()
                    .addClass("active");
            }
        });

        $("#close-sidebar").click(function () {
            $(".page-wrapper").removeClass("toggled");
        });
        $("#show-sidebar").click(function () {
            $(".page-wrapper").addClass("toggled");
        });

        $('#editBtn').click(function (e) {
            $.ajax('/Shop/GetAllAndNullCategories').done(function (categories) {

                var name = $('#product-name').text();
                var input = "<input id='product-name-input' type='text' class='form-control' value=\"" + name + "\">";
                $('#product-name').html(input);

                var price = $('#product-price').text();
                input = "<input id='product-price-input' type='text' class='form-control' value=\"" + price + "\">";
                $('#product-price').html(input);

                var category = $('#product-category').text();
                input = "<select id='product-category-input' class='form-control'>";
                for (i = 0; i < categories.length; i++) {
                    input += '<option value=' + categories[i].CategoryID;
                    if (categories[i].Name == category)
                        input += ' selected';
                    input += '>' + categories[i].Name + '</option>';
                }
                input += "</select>";
                $('#product-category').html(input);

                var description = $('#product-description').text();
                input = "<textarea id='product-description-input' class='form-control' rows='3'>" + description + "</textarea>";
                $('#product-description').html(input);

                $('#imageFile').css('display', 'block');

                $('#editBtn').css('display', 'none');
                $('#saveBtn').css('display', 'inline-block');

            }).fail(function (e) {
                console.log('failed to fetch categories');
            })

            e.preventDefault();
        })

        function getBase64(file, onLoadCallback) {
            return new Promise(function (resolve, reject) {
                if (!file)
                    resolve(null);

                var reader = new FileReader();
                reader.onload = function () { resolve(reader.result); };
                reader.onerror = reject;
                reader.readAsDataURL(file);
            });
        }


        $('#saveBtn').click(function (e) {
            var productId = $(this).parents('#productModal').attr('product-id');

            var file = document.querySelector('#imageFile').files[0];
            var promise = getBase64(file);
            promise.then(function (productImage) {
                console.log(productImage);
                $.ajax({
                    url: '/Home/UpdateProduct',
                    method: 'POST',
                    data: {
                        Price: $('#product-price-input').val(),
                        Description: $('#product-description-input').val(),
                        CategoryID: $('#product-category-input').val(),
                        Name: $('#product-name-input').val(),
                        ProductID: productId,
                        Image: productImage
                    }
                }).done(function (product) {
                    alert('save success!');
                    var productEl = $('.card[product-id=' + product.productID + ']');
                    productEl.find('.card-title').html(product.productName);
                    productEl.find('.card-text').html(product.description);
                    if (product.image)
                        productEl.find('.card-img-top').attr('src', product.image);
                    $('#productModal').modal("hide");

                })
                    .fail(function (error) {
                        alert('failed to save product. check image file size')
                    })

            });

            e.preventDefault();
        })

        $('#deleteBtn').click(function (e) {
            var productId = $(this).parents('#productModal').attr('product-id');

            $.ajax({
                url: '/Shop/DeleteProduct?id=' + productId,
                method: 'DELETE',
            }).done(function (id) {
                alert('delete success!');
                $('.card[product-id=' + id + ']').remove();
                $('#productModal').modal("hide");

            })
                .fail(function (error) {
                    console.log('delete product')
                })

            e.preventDefault();
        })


        $(".view-product-btn").click(function (e) {
            var productId = $(this).parents('.card').attr('product-id');
            $.ajax('/Home/GetProduct?id=' + productId).done(function (product) {

                console.log(product)
                $('#productModal #product-name').html(product.Name);
                $('#productModal #product-price').html(product.Price);
                $('#productModal #product-category').html(product.Category.Name);
                $('#productModal #product-description').html(product.Description);
                var stockIcon = product.IsInStock ? "glyphicon-ok" : "glyphicon-remove";
                $('#productModal #product-in-stock').html("<span class=\"glyphicon " + stockIcon + "\" aria-hidden=\"true\"></span>");
                $('#productModal #product-image').attr('src', product.Image);
                var bIsShowBuy = product.IsInStock ? "visibility:visible" : "visibility:hidden";
                $('#buy-product-btn').attr('style', bIsShowBuy);
                $('#editBtn').css('display', 'inline-block');
                $('#saveBtn').css('display', 'none');
                $('#imageFile').css('display', 'none');

                $('#productModal').attr('product-id', productId);

                $('#productModal').modal();
            }).fail(function (product) {
                console.log('failed to fetch product' + product);
            })

            e.preventDefault();
        })

        $(".buy-product-btn").click(function (e) {
            var productId = $('#productModal').attr('product-id');
            var UserID = $('#session').data('value');
            $.ajax('/Home/BuyProduct?id=' + productId + '&userId=' + UserID).done(function (bIsSuccess) {
                if (bIsSuccess) 
                    alert("Bought");
                else
                    alert('Sorry, we are out of it');
            }).fail(function (product) {
                alert("We had a problem");
            })

            e.preventDefault();
        })
    });</script>