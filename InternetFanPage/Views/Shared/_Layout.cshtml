@using System.Activities
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ari</title>
    <link href="~/css/Site.css" rel="stylesheet" type="text/css" />

    <!--<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">-->

    <link href="~/Content/bootstrap.min.css" rel="stylesheet" type="text/css" />

    <script src="~/Scripts/modernizr-2.8.3.js"></script>
</head>
<body>
    @*<script src="~/Scripts/FacebookLogin.js"></script>*@
    @if (Session["User"] == null)
    {
        @*<script>
                // This is called with the results from from FB.getLoginStatus().
                function statusChangeCallback(response) {
                    console.log('statusChangeCallback');
                    console.log(response);
                    // The response object is returned with a status field that lets the
                    // app know the current login status of the person.
                    // Full docs on the response object can be found in the documentation
                    // for FB.getLoginStatus().
                    if (response.status === 'connected') {
                        // Logged into your app and Facebook.
                        UpdateSession();
                    } else {
                        // The person is not logged into your app or we are unable to tell.
                        //document.getElementById('status').innerHTML = 'Please log ' +
                        //    'into this app.';
                    }
                }

                // This function is called when someone finishes with the Login
                // Button.  See the onlogin handler attached to it in the sample
                // code below.
                function checkLoginState() {
                    FB.getLoginStatus(function (response) {
                        statusChangeCallback(response);
                    });
                }

                window.fbAsyncInit = function () {
                    FB.init({
                        appId: '2432053446862527', // TODO: Replace with a constant variable
                        cookie: true,  // enable cookies to allow the server to access
                        // the session
                        xfbml: true,  // parse social plugins on this page
                        version: 'v4.0' // TODO: Replace with a constant variable
                    });

                    // Now that we've initialized the JavaScript SDK, we call
                    // FB.getLoginStatus().  This function gets the state of the
                    // person visiting this page and can return one of three states to
                    // the callback you provide.  They can be:
                    //
                    // 1. Logged into your app ('connected')
                    // 2. Logged into Facebook, but not your app ('not_authorized')
                    // 3. Not logged into Facebook and can't tell if they are logged into
                    //    your app or not.
                    //
                    // These three cases are handled in the callback function.

                    FB.getLoginStatus(function (response) {
                        statusChangeCallback(response);
                    });

                };

                // Load the SDK asynchronously
                (function (d, s, id) {
                    var js, fjs = d.getElementsByTagName(s)[0];
                    if (d.getElementById(id)) return;
                    js = d.createElement(s); js.id = id;
                    js.src = "https://connect.facebook.net/en_US/sdk.js";
                    fjs.parentNode.insertBefore(js, fjs);
                }(document, 'script', 'facebook-jssdk'));

                // Here we run a very simple test of the Graph API after login is
                // successful.  See statusChangeCallback() for when this call is made.
                function UpdateSession() {
                    console.log('Welcome!  Fetching your information.... ');
                    FB.api('/me', { fields: 'first_name' }, function (response) {

                        $.ajax({
                            url: '/Users/FacebookLogin',
                            method: 'POST',
                            data: {
                                firstName: response.first_name
                            }
                        })
                            .done(function (result) {
                                if (!result.LoginSucceeded) {
                                    alert('Problem with login, try again later..');
                                    return;
                                }
                                location.reload()
                            })
                            .fail(function () {
                                console.log("login failed");
                            })


                        //console.log('Successful login for: ' + response.name);
                        //document.getElementById('status').innerHTML =
                        //    'Thanks for logging in, ' + response.name + '!';
                        //console.log(response);
                    });
                }
            </script>*@
    }

    <div class="fixedPart">
        <div class="web-title">
            <div class="home-Title col-sm-10">
                Ariana Grande
            </div>


            @if (Session["User"] == null)
            {
                @*<div class="fb-login-button col-sm-2 login" data-width="" data-size="medium" data-button-type="login_with" data-auto-logout-link="false" data-use-continue-as="true"></div>*@

                <fb:login-button scope="public_profile,email" onlogin="checkLoginState();">
                </fb:login-button>

                <div class="col-sm-2 login">
                    <a href="#" id="loginBtn" class="loginBtn">Login/Register</a>
                </div>
            }
            else
            {
                <h1 class="hello-Title">Hello @Session["User"]</h1>
                <a href="#" id="logoutBtn">Log Out</a>

            }

            <div id="status">
            </div>
        </div>
        <div class="navbar navbar-inverse">
            <div class="container">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                </div>
                <div class="navbar-collapse collapse">
                    <ul class="nav navbar-nav">
                        <li>@Html.ActionLink("Home", "Index", "Home")</li>
                        <li>@Html.ActionLink("Shop", "Products", "Home")</li>
                        <li>@Html.ActionLink("Tour", "Concerts", "Home")</li>

                        @if (Session["IsAdmin"] != null && (bool)Session["IsAdmin"])
                        {
                            <li>@Html.ActionLink("Manage", "Manager", "Home")</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>


    <div class="modal fade" id="loginModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
        <div class="modal-dialog">
            <div class="loginmodal-container">
                <h1>Login to Your Account</h1><br>
                <form>
                    <input type="text" name="user" placeholder="Username" id="loginUser">
                    <input type="password" name="pass" placeholder="Password" id="loginPassword">
                    <input type="submit" name="login" id="loginSubmitBtn" class="login loginmodal-submit" value="Login">
                </form>

                <div class="login-help">
                    <a href="#" id="registerBtn">Register</a> -
                    <a href="#">Forgot Password</a>
                </div>
            </div>
        </div>
    </div>



    <div class="modal fade" id="registerModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
        <div class="modal-dialog">
            <div class="loginmodal-container">
                <h1>Register</h1><br>
                <form>
                    <input type="text" name="user" placeholder="Username" id="RegisterUser">
                    <input type="password" name="pass" placeholder="Password" id="RegisterPassword">
                    <input type="text" name="fisrtName" placeholder="First name" id="firstName">
                    <input type="text" name="lastName" placeholder="Last name" id="lastName">
                    <input type="text" name="phone" placeholder="Phone" id="phone">
                    <input type="text" name="address" placeholder="Address" id="address">

                    <input type="submit" name="register" id="registerSubmitBtn" class="login loginmodal-submit" value="Register">
                </form>


            </div>
        </div>
    </div>






    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            &copy; @DateTime.Now.Year Tom Ido Ella
        </footer>
    </div>


    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>

    @if (Session["User"] == null)
    {
        <script>
            jQuery(function ($) {
                // This is called with the results from from FB.getLoginStatus().
                function statusChangeCallback(response) {
                    console.log('statusChangeCallback');
                    console.log(response);
                    // The response object is returned with a status field that lets the
                    // app know the current login status of the person.
                    // Full docs on the response object can be found in the documentation
                    // for FB.getLoginStatus().
                    if (response.status === 'connected') {
                        // Logged into your app and Facebook.
                        console.log("updating session");
                        UpdateSession();
                    } else {
                        // The person is not logged into your app or we are unable to tell.
                        //document.getElementById('status').innerHTML = 'Please log ' +
                        //    'into this app.';
                    }
                }

                // This function is called when someone finishes with the Login
                // Button.  See the onlogin handler attached to it in the sample
                // code below.
                function checkLoginState() {
                    FB.getLoginStatus(function (response) {
                        statusChangeCallback(response);
                    });
                }

                function UpdateSession() {
                    console.log('Welcome!  Fetching your information.... ');
                    FB.api('/me', { fields: 'first_name' }, function (response) {

                        $.ajax({
                            url: '/Users/FacebookLogin',
                            method: 'POST',
                            data: {
                                firstName: response.first_name
                            }
                        })
                            .done(function (result) {
                                if (!result.LoginSucceeded) {
                                    alert('Problem with login, try again later..');
                                    return;
                                }
                                location.reload()
                            })
                            .fail(function () {
                                console.log("login failed");
                            })


                        //console.log('Successful login for: ' + response.name);
                        //document.getElementById('status').innerHTML =
                        //    'Thanks for logging in, ' + response.name + '!';
                        //console.log(response);
                    });
                }

                $.ajaxSetup({ cache: true });
                $.getScript('https://connect.facebook.net/en_US/sdk.js', function () {
                    FB.init({
                        appId: '2432053446862527',
                        cookie: true,  // enable cookies to allow the server to access the session
                        xfbml: true,
                        version: 'v4.0' // or v2.1, v2.2, v2.3, ...
                    });

                    FB.getLoginStatus(function (response) {
                        statusChangeCallback(response);
                    });
                });
            })
        </script>
    }

    <script>
        jQuery(function ($) {

            $.ajaxSetup({ cache: true });
            $.getScript('https://connect.facebook.net/en_US/sdk.js', function () {
                FB.init({
                    appId: '2432053446862527',
                    cookie: true,  // enable cookies to allow the server to access the session
                    xfbml: true,
                    version: 'v4.0' // or v2.1, v2.2, v2.3, ...
                });

                FB.getLoginStatus(function (response) {
                });
            });

            // Login
            $("#loginBtn").click(function (e) {
                $('#loginModal').modal();
                e.preventDefault();
            })

            $("#registerBtn").click(function (e) {
                $('#loginModal').modal('hide');
                $('#registerModal').modal();

                e.preventDefault();
            })


            $('#loginSubmitBtn').click(function (e) {
                var isValid = validateInputs('#loginModal');

                if (isValid) {
                    $.ajax({
                        url: '/Users/AttemptLogin',
                        method: 'POST',
                        data: {
                            Username: $('#loginUser').val(),
                            Password: $('#loginPassword').val(),
                        }
                    })
                        .done(function (result) {
                            if (!result.LoginSucceeded) {
                                alert('incorrect user/password');
                                return;
                            }
                            location.reload()
                        })
                        .fail(function () {
                            console.log("login failed");
                        })
                }
                e.preventDefault();
            })


            $('#registerSubmitBtn').click(function (e) {
                var isValid = validateInputs('#registerModal');

                if (isValid) {
                    $.ajax('/Users/CheckName?username=' + $('#RegisterUser').val())
                        .done(function (isUserExist) {
                            if (isUserExist) {
                                alert('username already exists!');
                                return;
                            }

                            $.ajax({
                                url: '/Users/Register',
                                method: 'POST',
                                data: {
                                    FirstName: $('#firstName').val(),
                                    LastName: $('#lastName').val(),
                                    Phone: $('#phone').val(),
                                    Address: $('#address').val(),
                                    Username: $('#RegisterUser').val(),
                                    Password: $('#RegisterPassword').val(),
                                }
                            })
                                .done(function (result) {
                                    alert('register success!');
                                    $('#registerModal').modal('hide');
                                    $('#registerModal input').val('');
                                })
                                .fail(function (e) {
                                    console.log('error in register');
                                })
                        })
                        .fail(function (e) {
                            console.log("failed to check username")
                        })
                }

                e.preventDefault();
            })

            function validateInputs(parent) {
                var isValid = true;


                return isValid;
            }

            $('#logoutBtn').click(function (e) {
                FB.logout(function (response) {
                    console.log("logged out of facebook");
                });

                $.ajax('/Users/Logout')
                    .done(function (result) {
                        location.reload()
                    })
                    .fail(function () {
                        console.log("logout failed");
                    })
                e.preventDefault();
            })
        });
    </script>
    @RenderSection("Scripts", required: false)


</body>
</html>